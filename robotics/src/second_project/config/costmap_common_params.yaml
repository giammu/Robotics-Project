# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
#robot_radius: 0.30  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)      #è importante setuppare correttamente la dimensione del robot
footprint: [[-0.3, -0.3], [0.3, -0.3], [0.3, 0.3], [-0.3, 0.3]] #Dimensione: 0.3 x 0.28  # if the robot is not circular -> allora devo scrivere manualmente il footprint del robot

#map_type: costmap_3d_voxel #tipo della mappa: nei 3d environment ho invece costmap_3d_voxel

obstacle_layer:
  enabled:              true
  unknown_threshold:    15              #i valori sotto di questo sono considerati sconosciuti
  mark_threshold:       0
  combination_method:   1                    #modo per combinare local e global costmap
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space             #voglio essere in grado di navigare in aree che sono unknown
  obstacle_range: 2.5  # maximum range in meters at which to insert obstacles into the costmap using sensor data
  raytrace_range: 3.0 # maximum range in meters at which to raytrace out obstacles from the map using sensor data
  observation_sources:  scan                   #specifico che gli obstacles verranno inseriti nella mappa mediante una laserscan
  scan:
    data_type: LaserScan
    topic: scan                #specifico ancora il topic scan, e dico che lo posso usare per fare 2 cose
    marking: true               #inserire l'obstacle nella mappa
    clearing: true               #pulisce/rimuove l'obstacle dalla mappa se non lo vede -> bisogna usarlo con cura perchè se uso un laserscan con 1 solo piano, e si sposta il sensore -> non vede più certi ostacoli
    #min_obstacle_height: 0.25
    #max_obstacle_height: 0.35

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:      #lo abbiamo visto la scorsa volta, è l'area intorno all'ostacolo dove non voglio avvicinarmi troppo, dove non voglio passare
  enabled:              true
  cost_scaling_factor:  10.0  # exponential rate at which the obstacle cost drops off (default: 10)              #se il robot fa fatica a passare nelle parti strette, posso abbassare questom costo
  inflation_radius:     0.25  # max. distance from an obstacle at which costs are incurred for planning paths.   #voglio stare distante almeno 0.5m da un ostacolo

static_layer:
  enabled:              true   #voglio abilitare la mappa caricata da file


  

