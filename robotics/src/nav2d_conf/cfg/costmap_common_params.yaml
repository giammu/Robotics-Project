# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

map_type: costmap_2d

obstacle_layer:
  enabled:              true
  unknown_threshold:    15    #i valori sotto di questo sono sconosciuti
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5  # maximum range in meters at which to insert obstacles into the costmap using sensor data
  raytrace_range: 3.0 # maximum range in meters at which to raytrace out obstacles from the map using sensor data
  observation_sources:  scan    #specifico che gli obstacles verranno inseriti nella mappa mediante una laserscan
  scan:
    data_type: LaserScan
    topic: scan         #specifico il topic scan
    marking: true       #segna l'obstacle
    clearing: true      #pulisce/rimuove l'obstacle dalla mappa se non lo vede
    min_obstacle_height: 0.25
    max_obstacle_height: 0.35
  

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:      #lo abbiamo visto la scorsa volta, Ã¨ l'area intorno all'ostacolo dove non voglio avvicinarmi troppo, dove non voglio passare
  enabled:              true
  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.5  # max. distance from an obstacle at which costs are incurred for planning paths.   #voglio stare distante almeno 0.5m da un ostacolo

static_layer:
  enabled:              true


  

