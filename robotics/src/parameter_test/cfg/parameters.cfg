#!/usr/bin/env python           #questo è un file che usa la sintassi di python, che definisce tutti i diversi parametres
PACKAGE = "parameter_test" #good practice: scrivo il nome del package

from dynamic_reconfigure.parameter_generator_catkin import * #dynamic reconfigure package #importo il package dynamic_reconfigure

gen = ParameterGenerator() #creo il generator che poi configura i dynamic parameters

gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100) #aggiungo nel generator i parametri che voglio cambiare a runtime (dynamic), "int_param" è il nome del parametro, int_t è il tipo del parametro, l'index 0 mi serve per capire quale parametro sta cambiando, "an integer parametre" spiega il significato del parameter: si usa nella GUI, 50 = default value, 0 è il minimo, 100 è il massimo
gen.add("double_param", double_t, 1, "A double parameter",    .5, 0,   1)
gen.add("str_param",    str_t,    2, "A string parameter",  "Hello World") #string non ha valore massimo e minimo, ha solo il default value
gen.add("bool_param",   bool_t,   3, "A Boolean parameter",  True) #boolean non ha valore massimo e minimo, ha solo il default value

size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"), #questo è un menu dove posso selezionare diverse opzioni: lo creo con una enum. Small=name, int_t=type 0=value, "a small constant"=description
                       gen.const("Medium",     int_t, 1, "A medium constant"),
                       gen.const("Large",      int_t, 2, "A large constant"),
                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
                     "An enum to set size")

gen.add("size", int_t, 4, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "param_second", "parameters")) #generate, genera il dynamic reconfigure: specifico il nome del package, "param_second"=il nome del nodo che lo runna, "parameter" = nome del configuration file che viene generato, al quale poi si aggiunge Config.h: si ottiene parametersConfig.h 
